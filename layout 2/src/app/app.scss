html {
    font-size: 62.5%;
    line-height: 1.4;
}

body {
    font-size: 1.6rem;
    overflow: hidden;
    max-width: 100%;
    max-height: 100%;
}

html, body {
    height: 100%;
}

*:focus {
    outline: none;
}

[background-white], .background-white {
    background-color: #fff !important;
}

md-content[background-gray] {
    background-color: #ececec !important;
}

md-content[background-gray] {
    > p, > span, > div {
        color: #999;
    }
}

md-list-item .title {
    font-weight: 500;

    text-overflow: ellipsis;
    overflow: hidden
}

md-list-item > button {
    padding: 8px 16px;
}

md-list-item .md-caption {
    line-height: 16px;
}

//$checkbox-size: 24px;
//
//md-checkbox {
//    min-height: $checkbox-size;
//    min-width: $checkbox-size;
//}
//
//md-checkbox .md-container {
//    width: $checkbox-size;
//    height: $checkbox-size;
//}
//
//md-checkbox .md-icon {
//    min-width: $checkbox-size;
//    min-height: $checkbox-size;
//}
//
//md-checkbox.md-checked .md-icon:after {
//    width: $checkbox-size / 3;
//    height: $checkbox-size * .67;
//    left: $checkbox-size / 3;
//}

// don't want to use [ng-click] in cases where ng-click is not always active.
.clickable, [clickable] {
    cursor: pointer;
}

// scales because it can contain text.
$avatar-size: 4.8rem;
.avatar {
    margin: 4px 8px;
    width: $avatar-size;
    height: $avatar-size;
    line-height: $avatar-size;
    font-size: ($avatar-size / 2) - .4;
    color: white;
    display: block;
    text-align: center;
    vertical-align: middle;
    border-radius: 50%;
    background-color: #c7c7c7;
}

md-card {
    background: #fff;
}

md-card h3 {
    color: #000;
}

.browsehappy {
    margin: 0.2rem 0;
    padding: 0.2rem 0;
    color: #000;
    background: #ccc;
}

md-card md-button {
    margin: .4rem;
}

md-toolbar {
    min-height: 56px;
    height: auto;

    .toolbar-row {
        align-content: center;
        display: flex;
        align-items: center;
    }
}

footer p {
    line-height: normal;
}

/* Toolbar area */
s md-toolbar h1 {
    margin: auto;
}

.width100 {
    width: 100%;
}

.width80 {
    width: 80%;
}

.bold-2 {
    font-weight: 600;
    letter-spacing: 0.006em;
}

.bold {
    font-weight: 500;
    letter-spacing: 0.005em;
}

b {
    font-weight: 500;
    letter-spacing: 0.005em;
}

.text-color-fade {
    opacity: 0.7;
}

.no-min-height {
    min-height: 0
}

.no-bold {
    font-weight: normal;
}

.no-select, [no-select] {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

md-content[layout-padding-fab], md-content.layout-padding-fab {
    padding-bottom: 80px;
}

[no-padding], .no-padding {
    padding: 0 !important;
}

[no-padding-right], .no-padding-right {
    padding-right: 0 !important;
}

[no-padding-left], .no-padding-left {
    padding-left: 0 !important;
}

[no-padding-top], .no-padding-top {
    padding-top: 0 !important;
}

[no-padding-bottom], .no-padding-bottom {
    padding-bottom: 0 !important;
}

[no-padding-tb], .no-padding-tb {
    @extend .no-padding-top;
    @extend .no-padding-bottom;
}

[no-margin-tb], .no-margin-tb {
    @extend .no-margin-top;
    @extend .no-margin-bottom;
}

[margin-top],
.margin-top {
    margin-top: 8px;
}

[layout-padding-lr] {
    padding: 0 8px;
}

[layout-padding-tb] {
    padding: 8px 0;
}

[no-margin],
.no-margin {
    margin: 0 !important;
}

[no-margin-bottom],
.no-margin-bottom {
    margin-bottom: 0 !important;
}

[no-margin-top],
.no-margin-top {
    margin-top: 0 !important;
}

[no-margin-left],
.no-margin-left {
    margin-left: 0 !important;
}

[no-margin-right],
.no-margin-right {
    margin-right: 0 !important;
}

.no-min-width {
    min-width: 0 !important;
}

.text-center {
    text-align: center !important;
}

.color-black {
    color: black !important;
}

.dark-text {
    color: #424242 !important;
}

.line-height-1rem {
    line-height: 1rem;
}

.line-height-normal {
    line-height: normal;
}

.vertical-align-middle {
    vertical-align: middle;
}

.border-right {
    border-radius: 0 !important;
    border-right: #acacac solid 1px;
}

.border-left {
    border-radius: 0 !important;
    border-left: #acacac solid 1px;
}

md-list md-list-item.active button.md-button:not([disabled]):hover {
    background-color: inherit; // needed so active on hover doesn't turn white.
}

[class*="-card"] {
    md-input-container.md-input-focused .md-input[readonly] {
        border-color: rgba(0, 0, 0, 0.12);
    }
    md-input-container .md-input[disabled], [disabled] md-input-container .md-input {
        color: rgba(0, 0, 0, 0.87);
    }

    .md-select-value {
        min-width: 120px;
    }

    md-select[disabled] .md-select-value {
        color: rgba(0, 0, 0, 0.87);
    }
}

/* Workarounds, these may not be needed in future versions of angular-material */

.md-button.md-icon-button.md-mini {
    margin: 0 0.3rem;
    height: 2.8rem;
    line-height: 2.8rem;
    width: 2.8rem;
}

.md-button.md-icon-button.md-small {
    margin: 0 0.4rem;
    height: 3.5rem;
    line-height: 3.5rem;
    width: 3.5rem;
}

//.md-fab.md-accent.md-hue-3 > span {
//    color: white;
//}

.md-visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    text-transform: none;
    width: 1px;
}

md-list-item .md-no-style.md-button {
    padding: inherit;
}

/* End Workarounds */
